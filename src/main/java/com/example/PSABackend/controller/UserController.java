package com.example.PSABackend.controller;

import com.example.PSABackend.classes.User;
import com.example.PSABackend.utils.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Map;
import java.util.Optional;

@RestController // This means that this class is a Controller
public class UserController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/add", consumes = "application/json", produces = "application/json")
    public User addNewUser (@RequestBody User user) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
//        System.out.println("Hello");
        User n = new User(user.getActive(), user.getPassword(), user.getRoles(), user.getUser_name());
        userRepository.save(n);
        return user;
    }

    @PostMapping(path = "/getUserById", consumes = "application/json", produces = "application/json")
    public Optional<User> getUserById (@RequestBody Map<String, Integer> payload){
        return userRepository.findById(payload.get("id"));
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
}
